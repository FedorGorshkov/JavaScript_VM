Горшков Фёдор, КНМО-101
Чтобы запустить файл, используйте:
	node vm.js *имя файла*
Пример:
	node vm.js gcd.fdrsc

Вместо переменных используются указатели на ячейки эмулированной
памяти. Помимо их, можно использовать и просто числа. Отличаются 
числа от указателей на память наличием квадратных скобок. Т.е.
[0] - указатель на ячейку памяти под номером 0, просто 0 - число.
Всего ячеек 1000 (т. е. указатели должны лежать в промежутке [0, 999])

В языке FedorScript реализованы следующие операции:

1. if. Условие как в JS, под условием может быть >1 строки, открытие 
    и закрытие при помощи {} обязательно. Причём открытие должно
    быть в той же строке, что и сам if, а закрытие в отдельной после 
    всех команд, необходимых для исполнения при выполнении условия.
    Допускаются вложенные if. Наличие круглых скобок необязательно.
	Пример:
	if ([0] > 1) {
	    sub [0] 1 [0]
	}
	Если значение ячейки под номером 0 превышает 1, вычитает
	из значения ячейки единицу и записывает в ячейку №0 ([0]--)

2. Арифметические операции add, sub, div, mul, rem.
    Синтаксис одинаков: 
    *операция* *ячейка №1* *ячейка №2* *ячейка для записи результата*
    add - сложение, sub - вычитание, div - деление, mul - умножение,
    rem - остаток от деления. 
	Пример:
	rem [1] [2] [3]
	Находит остаток от деления значения ячейки №1 на значение
	ячейки №2 и записывает результат в ячейку №3. Естественно,
	ячейка №3 может быть не инициализирована заранее.

3. Команда goto
    Синтаксис прост: goto *номер строки*. "Перенаправляет" программу
    на указанную строку.
	Пример:
	goto 3
	Переводит указатель интерпретатора на строку №3
	(при условии нумерации строк с 1)

4. Ввод и вывод
    Синтаксис прост: input/output *номер ячейки*
    Вводит или выводит значение ячейки. Ввод реализован через консоль.

5. Возможность комментировать код
    Тут всё просто: используйте // чтобы интерпретатор пропустил
    текущую строку и перешёл к следующей.

Реализованы собственные ошибки с указанием на строку, где они были
допущены. Например код вида:
	input [0]
	add [0] 1 2
Вызовет ошибку: 
	ArgumentError: for the add operation, the third argument must be 
	a memory reference
	At line 2: add [0] 1 2

Код интерпретатора полностью прокомментирован. Из возможных проблем
могу самостоятельно выделить:
1. Использование eval (небезопасно)
2. Вероятно, некоторые возможные ошибки не учтены
3. Местами используется "hardcode" т.е. при модификации интерпретатора
возможно появление новых ошибок в прежде написанных участках кода.
4. Нельзя использовать указатель на память в качестве указателя на память.
Т. е. запись вида [[0]] вызовет ArgumentsError: incorrect arguments, вместо
указания на ячейку памяти с номером, равным значению ячейки под номером 0.
